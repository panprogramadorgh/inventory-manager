# Binary files like executables at @INST_RUNTIME_DESTINATION@ or libraries at @INST_LIBRARY_DESTINATION@
file(STRINGS "@INSTALL_MANIFEST@" binaries_to_remove)

# Program data archives like invman.db at @INST_ARCHIVES_DESTINATION@
file(STRINGS "@ARCHIVES_MANIFEST@" archives_to_remove)

# Header files located at @INST_HEADERS_DESTINATION@
file(STRINGS "@HEADERS_MANIFEST@" headers_to_remove)

# Removes binaries
message(STATUS "Removing binary files from @INST_RUNTIME_DESTINATION@ and @INST_LIBRARY_DESTINATION@")

foreach(file ${binaries_to_remove})
  file(REMOVE ${file})

  if(EXISTS ${file})
    message(WARNING "Failed to remove ${file}")
  else()
    message(STATUS "Removed ${file}")
  endif()
endforeach()

# Removes archives
message(STATUS "Removing program data archives from @INST_ARCHIVES_DESTINATION@")

foreach(archive ${archives_to_remove})
  filE(REMOVE ${archive})

  if(EXISTS ${archive})
    message(WARNING "Failed to remove ${archive}")
  else()
    message(STATUS "Removed ${archive}")
  endif()
endforeach()

# Removes @INST_ARCHIVES_DESTINATION@ directory
file(REMOVE_RECURSE "@INST_ARCHIVES_DESTINATION@")
message(STATUS "Archives wrapper directory removed @INST_ARCHIVES_DESTINATION@")

# Removes headers
message(STATUS "Removing header files from @INST_HEADERS_DESTINATION@")

foreach(header ${headers_to_remove})
  file(REMOVE ${header})

  if(EXISTS ${header})
    message(WARNING "Failed to remove ${header}")
  else()
    message(STATUS "Removed ${header}")
  endif()
endforeach()

# Removes @INST_HEADERS_DESTINATION@ directory
file(REMOVE_RECURSE "@INST_HEADERS_DESTINATION@")
message(STATUS "Headers wrapper directory removed @INST_HEADERS_DESTINATION@")
